{"version":3,"sources":["components/Dashboard.js","components/FourOFour.js","components/Loader.js","components/Page.js","config/endpoints.js","config/helpers.js","index.js","App.js"],"names":["Dashboard","routeList","useState","routes","setRoutes","query","setQuery","useEffect","searchList","event","value","target","filter","route","path","toLowerCase","indexOf","className","onChange","onKeyDown","key","placeholder","length","map","index","to","name","tags","slice","tag","onClick","FourOFour","Loader","Page","history","find","location","pathname","innerHTML","setInnerHTML","isLoading","setIsLoading","isErrored","setIsErrored","fetch","url","then","res","text","response","md","Remarkable","render","window","Prism","highlightAll","catch","error","finally","dangerouslySetInnerHTML","__html","base","content","getPath","get","endpoint","json","makeURLSlug","removeExt","replace","titleName","itemPath","split","pop","e","word","capitalize","join","str","charAt","toUpperCase","substr","substring","getTags","setRouteInfo","endpoints","flat","transformRoute","exact","props","document","getElementById"],"mappings":"8NAIe,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAAa,EAGjBC,mBAASD,GAHQ,mBAGtCE,EAHsC,KAG9BC,EAH8B,OAKnBF,mBAAS,IALU,mBAKtCG,EALsC,KAK/BC,EAL+B,KAQ7CC,qBAAU,WACNH,EAAUH,KACX,CAACA,IAEJ,IAAMO,EAAa,SAAAC,GAAU,IACjBC,EAAUD,EAAME,OAAhBD,MACRJ,EAASI,GACTN,EAAUH,EAAUW,QAAO,SAAAC,GACvB,OAAOA,EAAMC,KAAKC,cAAcC,QAAQN,EAAMK,gBAAkB,OAUxE,OACI,yBAAKE,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,aACX,2BAAOP,MAAOL,EAAOa,SAAUV,EAAYW,UAV5C,SAAAV,GACO,WAAdA,EAAMW,KACNZ,EAAW,CAAEG,OAAQ,CAAED,MAAO,OAQwCW,YAAY,eAE9E,yBAAKJ,UAAU,WAENd,EAAOmB,OAAS,EAEbnB,EAAOoB,KAAI,SAACV,EAAOW,GACf,OACI,yBAAKP,UAAU,OAAOG,IAAKI,GACvB,kBAAC,IAAD,CAAMC,GAAIZ,EAAMC,MACZ,0BAAMG,UAAU,aAAaJ,EAAMa,MACnC,0BAAMT,UAAU,gBAERJ,EAAMc,KAAKC,MAAM,EAAGf,EAAMc,KAAKL,OAAS,GAAGC,KAAI,SAACM,EAAKL,GACjD,OAAO,0BAAMP,UAAU,MAAMG,IAAKI,EAAOM,QAAS,WAAQtB,EAAW,CAAEG,OAAQ,CAAED,MAAOmB,OAAaA,YASjIxB,EAAMiB,OAAS,EAEX,yBAAKL,UAAU,WAAf,qBAEA,yBAAKA,UAAU,WAAf,4BC1DjB,SAASc,IACpB,OACI,yBAAKd,UAAU,aACX,sDACA,kBAAC,IAAD,CAAMA,UAAU,aAAaQ,GAAG,KAAhC,S,YCLG,SAASO,IACpB,OACI,yBAAKf,UAAU,UAAS,0BAAMA,UAAU,aCEjC,SAASgB,EAAT,GAAuC,IAAvBC,EAAsB,EAAtBA,QACrBrB,EAD2C,EAAbZ,UACZkC,MAAK,SAAAtB,GAAK,OAAIA,EAAMC,OAASoB,EAAQE,SAASC,YADrB,EAEfnC,mBAAS,IAFM,mBAE1CoC,EAF0C,KAE/BC,EAF+B,OAGfrC,oBAAS,GAHM,mBAG1CsC,EAH0C,KAG/BC,EAH+B,OAIfvC,oBAAS,GAJM,mBAI1CwC,EAJ0C,KAI/BC,EAJ+B,KAyBjD,OAnBApC,qBAAU,WACFM,EACA+B,MAAM/B,EAAMgC,KACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC1B,IAAMC,EAAK,IAAIC,IACfZ,EAAaW,EAAGE,OAAOH,IACvBI,OAAOC,MAAMC,kBAEhBC,OAAM,SAAAC,GACHd,GAAa,MAEhBe,SAAQ,WACLjB,GAAa,OAGrBA,GAAa,GACbE,GAAa,MAElB,CAAC9B,EAAOyB,EAAWE,EAAWE,IAE7BF,EAAY,kBAACR,EAAD,MAAaU,EAAY,kBAACX,EAAD,MACjC,yBAAKd,UAAU,kBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SAASJ,EAAMa,MAC9B,yBAAKT,UAAU,cAAc0C,wBAAyB,CAAEC,OAAQtB,KAChE,kBAAC,IAAD,CAAMrB,UAAU,aAAaQ,GAAG,KAAhC,UCrCpB,IAAMoC,EAAO,6EAGE,GACXA,OACAC,QAASD,EAAO,sBAChBE,QAAS,SAAAjD,GACL,OAAO+C,EANG,aAMgB/C,GAE9BkD,IAAK,SAAAC,GACD,OAAOrB,MAAMiB,EATH,aASsBI,GAAUnB,MAAK,SAAAC,GAAG,OAAIA,EAAImB,YCR3D,SAASC,IAAuB,IAAXtB,EAAU,uDAAJ,GAC9B,OAAOuB,EAAUvB,GAAKwB,QAAQ,MAAO,KAAKA,QAAQ,KAAM,KAAKtD,cAG1D,SAASuD,IAA0B,IAAhBC,EAAe,uDAAJ,GACjC,OAAOA,EAASC,MAAM,KAAKC,MAAMD,MAAM,KAAK5D,QAAO,SAAA8D,GAAC,OAAIA,KAAGnD,KAAI,SAAAoD,GAC3D,OAAOC,EAAWD,MACnBE,KAAK,KASL,SAASD,EAAWE,GACvB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAG7C,SAASb,EAAU1C,GACtB,OAAOA,EAAKwD,UAAU,EAAGxD,EAAKV,QAAQ,KAAM,IAGzC,SAASmE,IAAmB,IAAXtC,EAAU,uDAAJ,GAC1B,OAAOA,EAAI2B,MAAM,KAAK5D,QAAO,SAAA8D,GAAC,OAAIA,KCrBtCtB,iBAAO,kBAAC,IAAD,KAAe,mBCQP,WAAgB,IAAD,EACQlD,mBAAS,IADjB,mBACnBD,EADmB,KACRmF,EADQ,OAEQlF,oBAAS,GAFjB,mBAEnBsC,EAFmB,KAERC,EAFQ,KAe1B,OAXAlC,qBAAU,WACNkC,GAAa,GACbG,MAAMyC,EAAUvB,SAAShB,MAAK,SAAAG,GAAQ,OAAIA,EAASiB,UAC9CpB,MAAK,SAAAG,GACFmC,EAAanC,EAASqC,KAAK/D,KAAI,SAAAV,GAAK,OFQ7C,WAAqC,IAAbA,EAAY,uDAAJ,GAKnC,OAJAA,EAAMgC,IAAMwC,EAAUtB,QAAQlD,EAAMC,MACpCD,EAAMC,KAAOqD,EAAYtD,EAAMC,MAC/BD,EAAMc,KAAOwD,EAAQtE,EAAMC,MAC3BD,EAAMa,KAAO4C,EAAUzD,EAAMC,MACtBD,EEb6C0E,CAAe1E,UAE1D6C,SAAQ,WACLjB,GAAa,QAEtB,IAGCD,EAAY,kBAACR,EAAD,MACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwD,OAAK,EAAC1E,KAAK,IAAIsC,OAAQ,SAAAqC,GAAK,OAAI,kBAACzF,EAAD,CAAWC,UAAWA,OAC7D,kBAAC,IAAD,CAAOa,KAAK,SAASsC,OAAQ,SAAAqC,GAAK,OAAI,kBAACxD,EAAD,iBAAUwD,EAAV,CAAiBxF,UAAWA,WD3B5D,OAAyByF,SAASC,eAAe,W","file":"static/js/main.fe8e1a56.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Dashboard({ routeList }) {\r\n\r\n\r\n    const [routes, setRoutes] = useState(routeList);\r\n\r\n    const [query, setQuery] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setRoutes(routeList);\r\n    }, [routeList]);\r\n\r\n    const searchList = event => {\r\n        const { value } = event.target;\r\n        setQuery(value);\r\n        setRoutes(routeList.filter(route => {\r\n            return route.path.toLowerCase().indexOf(value.toLowerCase()) >= 0;\r\n        }));\r\n    }\r\n\r\n    const keyMap = event => {\r\n        if (event.key === 'Escape') {\r\n            searchList({ target: { value: '' } });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Dashboard p-4\">\r\n            <div className=\"SearchContainer\">\r\n                <div className=\"SearchBar\">\r\n                    <input value={query} onChange={searchList} onKeyDown={keyMap} placeholder=\"Search...\" />\r\n                </div>\r\n                <div className=\"LinkBox\">\r\n                    {\r\n                        (routes.length > 0)\r\n                            ?\r\n                            routes.map((route, index) => {\r\n                                return (\r\n                                    <div className=\"Link\" key={index}>\r\n                                        <Link to={route.path}>\r\n                                            <span className=\"LinkTitle\">{route.name}</span>\r\n                                            <span className=\"TagContainer\">\r\n                                                {\r\n                                                    route.tags.slice(0, route.tags.length - 1).map((tag, index) => {\r\n                                                        return <span className=\"Tag\" key={index} onClick={() => { searchList({ target: { value: tag } }) }}>{tag}</span>;\r\n                                                    })\r\n                                                }\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            :\r\n                            query.length > 0\r\n                                ?\r\n                                <div className=\"InfoBox\">No match found...</div>\r\n                                :\r\n                                <div className=\"InfoBox\">Nothing to explore...</div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function FourOFour() {\r\n    return (\r\n        <div className=\"FourOFour\">\r\n            <h3>You seem to be lost...</h3>\r\n            <Link className=\"HomeButton\" to=\"/\">Home</Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <div className=\"loader\"><span className=\"spinner\"></span></div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport FourOFour from './FourOFour';\r\nimport { Remarkable } from 'remarkable';\r\nimport Loader from './Loader';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Page({ history, routeList }) {\r\n    const route = routeList.find(route => route.path === history.location.pathname);\r\n    const [innerHTML, setInnerHTML] = useState('');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isErrored, setIsErrored] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (route) {\r\n            fetch(route.url)\r\n                .then(res => res.text()).then(response => {\r\n                    const md = new Remarkable();\r\n                    setInnerHTML(md.render(response));\r\n                    window.Prism.highlightAll();\r\n                })\r\n                .catch(error => {\r\n                    setIsErrored(true);\r\n                })\r\n                .finally(() => {\r\n                    setIsLoading(false);\r\n                });\r\n        } else {\r\n            setIsLoading(false);\r\n            setIsErrored(true);\r\n        }\r\n    }, [route, innerHTML, isLoading, isErrored]);\r\n    return (\r\n        isLoading ? <Loader /> : isErrored ? <FourOFour /> :\r\n            <div className=\"Page container\">\r\n                <div className=\"PageContent\">\r\n                    <div className=\"Title\">{route.name}</div >\r\n                    <div className=\"ContentBody\" dangerouslySetInnerHTML={{ __html: innerHTML }}></div>\r\n                    <Link className=\"HomeButton\" to=\"/\">Home</Link>\r\n                </div >\r\n            </div >\r\n    )\r\n}","const base = \"https://raw.githubusercontent.com/thefallenmerc/tutorials-n-guides/master/\";\r\nconst staticDir = \"static/src\"\r\n\r\nexport default {\r\n    base,\r\n    content: base + \"static/content.json\",\r\n    getPath: path => {\r\n        return base + staticDir + path;\r\n    },\r\n    get: endpoint => {\r\n        return fetch(base + staticDir + endpoint).then(res => res.json())\r\n    }\r\n}","import endpoints from \"./endpoints\";\r\n\r\nexport function makeURLSlug(url = '') {\r\n    return removeExt(url).replace(/\\\\/g, '/').replace(/_/g, '-').toLowerCase();\r\n}\r\n\r\nexport function titleName(itemPath = '') {\r\n    return itemPath.split('/').pop().split('-').filter(e => e).map(word => {\r\n        return capitalize(word);\r\n    }).join(' ');\r\n}\r\n\r\nexport function camelCase(str = '') {\r\n    return str.split('_').map(word => {\r\n        return capitalize(word);\r\n    }).join('');\r\n}\r\n\r\nexport function capitalize(str) {\r\n    return str.charAt(0).toUpperCase() + str.substr(1);\r\n}\r\n\r\nexport function removeExt(name) {\r\n    return name.substring(0, name.indexOf('.', -1))\r\n}\r\n\r\nexport function getTags(url = \"\") {\r\n    return url.split(\"/\").filter(e => e);\r\n}\r\n\r\nexport function transformRoute(route = {}) {\r\n    route.url = endpoints.getPath(route.path);\r\n    route.path = makeURLSlug(route.path);\r\n    route.tags = getTags(route.path);\r\n    route.name = titleName(route.path);\r\n    return route;\r\n}","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from './App';\r\n\r\nrender(<BrowserRouter><App /></BrowserRouter>, document.getElementById(\"root\"));\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/main.scss\";\r\n\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\nimport Page from './components/Page';\r\n\r\nimport endpoints from './config/endpoints';\r\n\r\nimport { transformRoute } from './config/helpers';\r\nimport Loader from './components/Loader';\r\n\r\nexport default function App() {\r\n    const [routeList, setRouteInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        fetch(endpoints.content).then(response => response.json())\r\n            .then(response => {\r\n                setRouteInfo(response.flat.map(route => transformRoute(route)));\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        isLoading ? <Loader /> :\r\n            <Switch>\r\n                <Route exact path=\"/\" render={props => <Dashboard routeList={routeList} />} />\r\n                <Route path=\"/:page\" render={props => <Page {...props} routeList={routeList} />} />\r\n            </Switch>\r\n    );\r\n}"],"sourceRoot":""}